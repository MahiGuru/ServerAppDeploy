{"version":3,"sources":["webpack:///./src/app/shared/services/customer-management.service.ts","webpack:///./src/app/shared/services/date-management.service.ts","webpack:///./src/app/shared/services/delivery-channel.service.ts","webpack:///./src/app/shared/services/share-data/shared-customer-data.service.ts","webpack:///./src/app/shared/services/user-management.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Customer } from 'src/app/core/models/customer';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/internal/operators/map';\nimport { Product } from 'src/app/core/interface/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerManagementService {\n  constructor(public http: HttpClient) { }\n\n  getCustomers(): Observable<Customer> {\n    console.log(environment.user.url);\n    return this.http.get(environment.baseUrl + environment.customer.list).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  addCustomer(data): Observable<Object> {\n    return this.http.post(environment.baseUrl + environment.customer.url, data).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  updateCustomer(data): Observable<Object> {\n    return this.http.put(environment.baseUrl + environment.customer.url, data).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  deleteCustomer(id: any): any {\n    return this.http.delete(environment.baseUrl + environment.customer.url + '?customerId=' + id).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  getCustomerProducts(customerId: number): Observable<Product> {\n    return this.http.get(environment.baseUrl + environment.customer.products + customerId).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  saveProductSubscription(data): Observable<Object> {\n    return this.http.post(environment.baseUrl + environment.customer.orders, data).pipe(\n      map((res: any) => res)\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateManagementService {\n\n  constructor() { }\n  getDateFormat(inputDate?: any) {\n    const today = (!inputDate) ? new Date() : new Date(inputDate);\n    const month = today.getMonth() + 1;\n    const date = today.getDate();\n    const year = today.getFullYear();\n    return month + '/' + date + '/' + year;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/internal/operators/map';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeliveryChannelService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  getDeliveryChannels(): Observable<any> {\r\n    return this.http.get(environment.baseUrl + environment.delivery.url).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n  postDeliveryChannels(data: any): Observable<any> {\r\n    return this.http.post(environment.baseUrl + environment.delivery.url, data).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n  deleteDeliveryChannels(data: any): Observable<any> {\r\n    return this.http.post(environment.baseUrl + environment.delivery.url, data).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n  updateDeliveryChannel(data: any): Observable<any> {\r\n    return this.http.put(environment.baseUrl + environment.delivery.channel, data).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n  getDeliveryCustomers(): Observable<any> {\r\n    return this.http.get(environment.baseUrl + environment.delivery.customer).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n  updateDeliveryCustomer(data: any): Observable<any> {\r\n    return this.http.put(environment.baseUrl + environment.delivery.customer, data).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n  updateDeliveryBoy(data: any): Observable<any> {\r\n    return this.http.put(environment.baseUrl + environment.delivery.deliveryboy, data).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n  getDeliveryDetails(): Observable<any> {\r\n    return this.http.get(environment.baseUrl + environment.delivery.details).pipe(\r\n      map((res: any) => res.data)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedCustomerDataService {\n  private customerDataSource = new BehaviorSubject(false);\n  private customerAction = new BehaviorSubject('');\n  currentCustomer$ = this.customerDataSource.asObservable();\n  customerAction$ = this.customerAction.asObservable();\n\n  constructor() { }\n\n  changeData(data: any) {\n    this.customerDataSource.next(data);\n  }\n  changeCustomerAction(action) {\n    this.customerAction.next(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { of, Observable } from 'rxjs';\nimport { User } from 'src/app/core/interface/user';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserManagementService {\n\n  constructor(public http: HttpClient) { }\n\n  getUsers(): Observable<User> {\n    console.log(environment.user.url);\n    return this.http.get(environment.baseUrl + environment.user.url).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  addUser(data): Observable<User> {\n    console.log(environment.user.url);\n    return this.http.post(environment.baseUrl + environment.user.url, data).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  getRoles(): Observable<any> {\n    return this.http.get(environment.baseUrl + environment.utils.roles).pipe(\n      map((res: any) => res.data)\n    );\n  }\n  deleteUser(id: any): any {\n    return this.http.delete(environment.baseUrl + environment.customer.url + '?userId=' + id).pipe(\n      map((res: any) => res.data)\n    );\n  }\n}\n"],"sourceRoot":""}