{"version":3,"sources":["webpack:///./src/app/core/models/userRoles.ts","webpack:///./src/app/features/user/user-create/user-create.component.html","webpack:///./src/app/features/user/user-create/user-create.component.scss","webpack:///./src/app/features/user/user-create/user-create.component.ts","webpack:///./src/app/features/user/user.component.html","webpack:///./src/app/features/user/user.component.scss","webpack:///./src/app/features/user/user.component.ts","webpack:///./src/app/features/user/user.module.ts","webpack:///./src/app/shared/services/share-data/shared-user-data.service.ts"],"names":[],"mappings":"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","file":"features-user-user-module.js","sourcesContent":["export const USERROLES = {\r\n  'ADMIN': 'ADMIN',\r\n  'CUST_REP': 'CUST_REP',\r\n  'DELIVERY_REP': 'DELIVERY_REP',\r\n  'DELIVERY_BOY': 'DELIVERY_BOY'\r\n};\r\n","module.exports = \"<div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between flex-start\\\">\\n  <div class=\\\"\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-icon fxFlexAlign=\\\"center\\\" (click)=\\\"redirectTo('user')\\\">arrow_back</mat-icon>\\n    <i class=\\\"fs-40 fas fa-user-plus\\\" fxFlexAlign=\\\"center\\\"></i>\\n    <div class=\\\"product-heading\\\" fxFlex>\\n      <h1 class=\\\"p-0 m-0\\\"> {{title}}</h1>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"text-right pt-15\\\" fxFlex fxFlexAlign=\\\"flex-start\\\">\\n    <button mat-raised-button (click)=\\\"save()\\\">Save</button>\\n  </div>\\n</div>\\n<div class=\\\"tbl-content\\\">\\n  <form [formGroup]=\\\"userForm\\\">\\n    <div class=\\\"create-form\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"30px\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"inner-form\\\">\\n        <div fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"User Roles\\\" formControlName=\\\"role\\\">\\n              <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.code\\\">\\n                {{role.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <p class=\\\"error mt-5\\\" *ngIf=\\\"userForm.get('role').invalid && userForm.get('role').dirty\\\">\\n            Please select user role\\n          </p>\\n        </div>\\n        <div fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Delivery Channels\\\" formControlName=\\\"deliveryChannel\\\">\\n              <mat-option *ngFor=\\\"let identity of identityTypes\\\" [value]=\\\"identity.code\\\">\\n                {{identity.name}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <p class=\\\"error mt-5\\\" *ngIf=\\\"userForm.get('deliveryChannel').invalid && userForm.get('deliveryChannel').dirty\\\">\\n            Please enter delivery channel\\n          </p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n          <div fxFlex=\\\"20\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"35px\\\">\\n            <mat-form-field fxFlex=\\\"20\\\">\\n              <mat-select placeholder=\\\"Salutions\\\" formControlName=\\\"salutation\\\">\\n                <mat-option value=\\\"mr\\\">\\n                  Mr\\n                </mat-option>\\n                <mat-option value=\\\"mrs\\\">\\n                  Mrs\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <p class=\\\"error mt-10\\\" *ngIf=\\\"userForm.get('salutation').invalid && userForm.get('salutation').dirty\\\">\\n              Please select Salutation\\n            </p>\\n          </div>\\n          <div fxFlex=\\\"40\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\">\\n            </mat-form-field>\\n\\n            <p class=\\\"error mt-5\\\" *ngIf=\\\"userForm.get('firstName').invalid && userForm.get('firstName').dirty\\\">\\n              Please select user firstname\\n            </p>\\n          </div>\\n          <div fxFlex=\\\"40\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\n            </mat-form-field>\\n\\n            <p class=\\\"error mt-5\\\" *ngIf=\\\"userForm.get('lastName').invalid && userForm.get('lastName').dirty\\\">\\n              Please select user lastname\\n            </p>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n          <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Identity Types\\\" formControlName=\\\"identityType\\\">\\n                <mat-option *ngFor=\\\"let identity of identityTypes\\\" [value]=\\\"identity.code\\\">\\n                  {{identity.name}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <p class=\\\"error\\\" *ngIf=\\\"userForm.get('identityType').invalid && userForm.get('identityType').dirty \\\">\\n              Please enter Identity Type\\n            </p>\\n          </div>\\n          <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Identity Value\\\" formControlName=\\\"identityNo\\\">\\n            </mat-form-field>\\n            <p class=\\\"error\\\" *ngIf=\\\"userForm.get('identityNo').invalid && userForm.get('identityNo').dirty \\\">\\n              Please enter Identity Number\\n            </p>\\n          </div>\\n        </div>\\n        <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n            <input matInput placeholder=\\\"UserName\\\" formControlName=\\\"userName\\\">\\n\\n          </mat-form-field>\\n          <p class=\\\"error\\\" *ngIf=\\\"userForm.get('userName').invalid && userForm.get('userName').dirty \\\">\\n            Please enter username\\n          </p>\\n        </div>\\n        <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n            <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n\\n          </mat-form-field>\\n          <p class=\\\"error\\\" *ngIf=\\\"userForm.get('password').invalid && userForm.get('password').dirty\\\">\\n            Please enter password\\n          </p>\\n        </div>\\n        <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Email Address\\\" formControlName=\\\"email\\\">\\n\\n          </mat-form-field>\\n          <p class=\\\"error\\\" *ngIf=\\\"userForm.get('email').invalid && userForm.get('email').dirty\\\">\\n            Please enter Email\\n          </p>\\n        </div>\\n        <div fxFlex=\\\"20\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Phone\\\" maxlength=\\\"10\\\" formControlName=\\\"phone\\\" />\\n\\n          </mat-form-field>\\n          <p class=\\\"error\\\" *ngIf=\\\"userForm.get('phone').invalid && userForm.get('phone').dirty\\\">\\n            Please enter Phone Number\\n          </p>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n          <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n                <mat-option *ngFor=\\\"let country of countrys\\\" [value]=\\\"country.code\\\">\\n                  {{country.name}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <p class=\\\"error mt-5\\\" *ngIf=\\\"userForm.get('country').invalid && userForm.get('country').dirty\\\">\\n              Please select country\\n            </p>\\n          </div>\\n          <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n                <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.code\\\">\\n                  {{city.name}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <p class=\\\"error mt-5\\\" *ngIf=\\\"userForm.get('city').invalid && userForm.get('city').dirty\\\">\\n              Please select city\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div fxFlex=\\\"20\\\" fxLayout=\\\"column\\\">\\n          <mat-form-field class=\\\"\\\">\\n            <input matInput #postalCode maxlength=\\\"6\\\" placeholder=\\\"Postal Code\\\" formControlName=\\\"pincode\\\">\\n            <mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 6</mat-hint>\\n          </mat-form-field>\\n          <p class=\\\"error\\\" *ngIf=\\\"userForm.get('pincode').invalid && userForm.get('pincode').dirty\\\">\\n            Please enter Pincode\\n          </p>\\n        </div>\\n        <mat-form-field fxFlex=\\\"80\\\">\\n          <textarea matInput placeholder=\\\"Address\\\" formControlName=\\\"address1\\\"></textarea>\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <p>Payment Collection </p>\\n          <div fxLayout=\\\"column\\\">\\n            <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"'red'\\\" value=\\\"1\\\" formControlName=\\\"paymentCollectionEligibility\\\"></mat-slide-toggle>\\n          </div>\\n        </div>\\n        <p class=\\\"error\\\" *ngIf=\\\"!(userForm.get('paymentCollectionEligibility').value) && userForm.get('paymentCollectionEligibility').dirty\\\">\\n          Please Select Payment Collection Eligibility\\n        </p>\\n        <br />\\n      </div>\\n      <div class=\\\"mtb-20 text-center\\\">\\n        <button mat-raised-button color=\\\"accent\\\" (click)=\\\"save()\\\">Save User</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \":host {\\n  overflow: auto; }\\n  :host .section-header {\\n    background-color: #0092d6;\\n    padding: 15px 50px;\\n    color: white; }\\n  :host .inner-form {\\n    margin: auto;\\n    width: 500px; }\\n  :host /deep/ .mat-form-field-empty.mat-form-field-label {\\n  color: #a1a1a1;\\n  font-weight: 400;\\n  font-size: 0.9em; }\\n  :host /deep/ .mat-form-field-underline {\\n  background-color: #6b6b6b; }\\n  :host /deep/ .red-snackbar {\\n  position: absolute;\\n  top: 20px; }\\n  .error {\\n  margin-top: -10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmVhdHVyZXMvdXNlci91c2VyLWNyZWF0ZS9EOlxcV09SS1xcTUVSVURBTlxcaGFyaWJvbF9hbmcvc3JjXFxhcHBcXGZlYXR1cmVzXFx1c2VyXFx1c2VyLWNyZWF0ZVxcdXNlci1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFjLEVBYWY7RUFkRDtJQUlJLDBCQUFrQztJQUNsQyxtQkFBa0I7SUFDbEIsYUFBWSxFQUNiO0VBUEg7SUFVSSxhQUFZO0lBQ1osYUFBWSxFQUNiO0VBSUg7RUFHSSxlQUFjO0VBQ2QsaUJBQWdCO0VBQ2hCLGlCQUFnQixFQUNqQjtFQU5IO0VBU0ksMEJBQXlCLEVBQzFCO0VBVkg7RUFhSSxtQkFBa0I7RUFDbEIsVUFBUyxFQUNWO0VBR0g7RUFDRSxrQkFBaUIsRUFDbEIiLCJmaWxlIjoic3JjL2FwcC9mZWF0dXJlcy91c2VyL3VzZXItY3JlYXRlL3VzZXItY3JlYXRlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG5cclxuICAuc2VjdGlvbi1oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDE0NiwgMjE0KTtcclxuICAgIHBhZGRpbmc6IDE1cHggNTBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcblxyXG4gIC5pbm5lci1mb3JtIHtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICB9XHJcblxyXG59XHJcblxyXG46aG9zdCAvZGVlcC8ge1xyXG5cclxuICAubWF0LWZvcm0tZmllbGQtZW1wdHkubWF0LWZvcm0tZmllbGQtbGFiZWwge1xyXG4gICAgY29sb3I6ICNhMWExYTE7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1zaXplOiAwLjllbTtcclxuICB9XHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzZiNmI2YjtcclxuICB9XHJcblxyXG4gIC5yZWQtc25hY2tiYXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAyMHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmVycm9yIHtcclxuICBtYXJnaW4tdG9wOiAtMTBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { RoutingService } from 'src/app/shared/services/routing.service';\nimport { MatSnackBar } from '@angular/material';\nimport { UserManagementService } from 'src/app/shared/services/user-management.service';\nimport { SharedUserDataService } from 'src/app/shared/services/share-data/shared-user-data.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from 'src/app/shared/services/common-service.service';\nimport { USERROLES } from 'src/app/core/models/userRoles';\nimport { DateManagementService } from 'src/app/shared/services/date-management.service';\n\n@Component({\n  selector: 'haribol-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.scss']\n})\nexport class UserCreateComponent implements OnInit {\n\n  public userForm: FormGroup;\n  public isUpdate: any;\n  public roles: any;\n  public title: any = 'User Create';\n  public paymentCollection: any;\n  public identityTypes: Array<any> = [];\n\n  public countrys: Array<any> = [];\n  public cities: Array<any> = [];\n\n  constructor(\n    public fb: FormBuilder,\n    public routingService: RoutingService,\n    public userService: UserManagementService,\n    public shareUserDataService: SharedUserDataService,\n    public route: ActivatedRoute,\n    public commonService: CommonService,\n    public dateManagementService: DateManagementService) { }\n\n  ngOnInit() {\n    if (this.route.snapshot.url[0].path === 'update') {\n      this.isUpdate = true;\n      this.title = 'User Update';\n    }\n    /**\n     * USER FORM creation\n     */\n    this.userForm = this.fb.group({\n      salutation: ['', Validators.required],\n      userName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]],\n      phone: ['', [Validators.required, Validators.pattern('^(?:(?:\\\\+|0{0,2})91(\\\\s*[\\\\-]\\\\s*)?|[0]?)?[56789]\\\\d{9}$')]],\n      firstName: ['', [Validators.required]],\n      identityType: [''],\n      userId: [null],\n      identityNo: [''],\n      validity: [this.dateManagementService.getDateFormat()],\n      deliveryChannel: [''],\n      city: ['', [Validators.required]],\n      country: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', Validators.required],\n      address1: ['', [Validators.required]],\n      role: ['', Validators.required],\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9][0-9]{5}$')]],\n      paymentCollectionEligibility: [0, Validators.required]\n\n    });\n    // get Countrys, Regions, Identity types\n    this.getUtils();\n\n    // USER ROLE SUBSCRIBE\n    this.userForm.get('role').valueChanges.subscribe(type => {\n      this.userForm.get('identityType').clearValidators();\n      this.userForm.get('identityNo').clearValidators();\n      this.userForm.get('deliveryChannel').clearValidators();\n      if (type === USERROLES.DELIVERY_BOY) {\n        this.userForm.get('identityType').setValidators([Validators.required]);\n        this.userForm.get('identityNo').setValidators([Validators.required]);\n      }\n      if (type === USERROLES.CUST_REP || type === USERROLES.DELIVERY_REP) {\n        this.userForm.get('deliveryChannel').setValidators([Validators.required]);\n      }\n      this.userForm.get('identityType').updateValueAndValidity({ onlySelf: true });\n      this.userForm.get('identityNo').updateValueAndValidity({ onlySelf: true });\n      this.userForm.get('deliveryChannel').updateValueAndValidity({ onlySelf: true });\n    });\n    /**\n     * If SharedService has \"User\" data will update the userform object\n     */\n    this.shareUserDataService.currentUser$.subscribe((data) => {\n      if (data) {\n        this.isUpdate = true;\n        this.dataAssignToForm(data);\n      } else {\n        this.isUpdate = false;\n      }\n    });\n  }\n  /**\n   * GET utils country, regions, IdentityTypes, Roles\n   */\n  getUtils() {\n    this.commonService.getAllCountrys().subscribe(res => {\n      this.countrys = res;\n      this.userForm.get('country').setValue(res[0].id);\n    });\n    this.commonService.getRegions().subscribe(res => {\n      this.cities = res;\n    });\n    this.commonService.getIdentityTypes().subscribe(res => {\n      this.identityTypes = res;\n    });\n    this.userService.getRoles().subscribe(roles => {\n      this.roles = roles;\n    });\n  }\n  /**\n   * Save/update User\n   */\n  save() {\n    this.commonService.validate(this.userForm);\n    if (this.userForm.valid) {\n      const productObj = this.userForm.value;\n      productObj.paymentCollectionEligibility = (productObj.paymentCollectionEligibility) ? 1 : 0;\n      this.userService.addUser(productObj).subscribe(res => {\n        this.commonService.showSnackBar((!this.isUpdate) ? 'Saved!!' : 'Updated User Record!!',\n          (!this.isUpdate) ? 'Success' : 'Updated Record');\n        this.routingService.goToPage('user');\n      }, (err) => {\n        this.commonService.showSnackBar('Something went wrong!!', 'Failed Save');\n      });\n    }\n  }\n\n  /**\n   * userform update with Userobject\n   * @param data -> userObject\n   */\n  redirectTo(page) {\n    this.routingService.goToPage(page);\n  }\n  /**\n   * userform update with Userobject\n   * @param data -> userObject\n   */\n  dataAssignToForm(data) {\n    this.userForm.get('userName').setValue(data.userName);\n    this.userForm.get('email').setValue(data.email);\n    this.userForm.get('phone').setValue(data.phone);\n    this.userForm.get('firstName').setValue(data.firstName);\n    this.userForm.get('lastName').setValue(data.lastName);\n    this.userForm.get('password').setValue(data.password);\n    this.userForm.get('salutation').setValue(data.salutation);\n    this.userForm.get('address1').setValue(data.address);\n    this.userForm.get('role').setValue(data.role);\n    this.userForm.get('userId').setValue(data.userId);\n    this.userForm.get('address1').setValue(data.address1);\n    this.userForm.get('pincode').setValue(data.pincode);\n    this.userForm.get('city').setValue(data.city);\n    this.userForm.get('identityType').setValue(data.identityType);\n    this.userForm.get('identityNo').setValue(data.identityNo);\n    this.userForm.get('paymentCollectionEligibility').setValue(data.paymentCollectionEligibility);\n    this.userForm.updateValueAndValidity({ onlySelf: true });\n  }\n\n}\n","module.exports = \"<div class=\\\"customer-section\\\">\\r\\n  <haribol-page-heading [title]=\\\"'User Management'\\\" [headIcon]=\\\"'fa-user-tie'\\\" [btnText]=\\\"'Add New User'\\\" (btnClick)=\\\"addNewBtnClick()\\\"\\r\\n    (searchVal)=\\\"getSearchInput($event)\\\" [count]=\\\"usersLength\\\"></haribol-page-heading>\\r\\n  <div class=\\\"tbl-content\\\">\\r\\n    <div class=\\\"user-info-row\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <div fxFlex fxFlexAlign=\\\"center\\\" *ngIf=\\\"userData\\\">\\r\\n        Users: {{userData.length}}\\r\\n      </div>\\r\\n      <div class=\\\"sort-link\\\" fxFlex fxFlexAlign=\\\"center\\\" class=\\\"text-right\\\" (click)=\\\"sortClick()\\\">\\r\\n        <mat-icon>sort_by_alpha</mat-icon>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let user of userData\\\">\\r\\n      <div class=\\\"data-info ptb-10 mb-10\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"20px\\\">\\r\\n          <img fxFlex=\\\"50px\\\" gravatar [email]=\\\"user.email\\\" [size]=\\\"36\\\">\\r\\n          <p fxFlex fxFlexAlign=\\\"center\\\">{{user.firstName}} {{user.lastName}}</p>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"200px\\\" class=\\\"wrap\\\"> {{user.email}}</div>\\r\\n        <div fxFlex=\\\"120px\\\"> {{user.phone}}</div>\\r\\n        <div fxFlex=\\\"200px\\\"> {{user.address1}}</div>\\r\\n        <div fxFlex>\\r\\n          <mat-slide-toggle [checked]=\\\"true\\\">Active</mat-slide-toggle>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"180px\\\">\\r\\n          <button mat-button class=\\\"btn min-btn\\\" (click)=\\\"editBtnClick(user)\\\">\\r\\n            <i class=\\\"fs-18 fas fa-edit\\\"></i>\\r\\n          </button>\\r\\n          <button mat-button class=\\\"btn min-btn\\\" (click)=\\\"removeBtnClick(user)\\\">\\r\\n            <i class=\\\"fs-18 fas fa-times\\\"></i>\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <!-- <haribol-list-item [data]=\\\"user\\\"></haribol-list-item> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZlYXR1cmVzL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserManagementService } from './../../shared/services/user-management.service';\r\nimport { User } from 'src/app/core/models/user';\r\nimport { RoutingService } from 'src/app/shared/services/routing.service';\r\nimport { SharedUserDataService } from 'src/app/shared/services/share-data/shared-user-data.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport * as _ from 'lodash';\r\nimport { CommonService } from 'src/app/shared/services/common-service.service';\r\n\r\n@Component({\r\n  selector: 'haribol-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  public userData: User[];\r\n  public originalUsersArr: User[];\r\n  public usersLength: number;\r\n  constructor(\r\n    public userMangementService: UserManagementService,\r\n    public routingService: RoutingService,\r\n    public sharedUserDataService: SharedUserDataService,\r\n    public commonService: CommonService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.usersLength = 0;\r\n    this.init();\r\n  }\r\n  /**\r\n   * Get all the users\r\n   */\r\n  public init() {\r\n    this.userMangementService.getUsers().subscribe((result: any) => {\r\n      this.userData = result;\r\n      this.originalUsersArr = result;\r\n      this.usersLength = this.userData.length;\r\n    });\r\n  }\r\n  /**\r\n   * SearchInput will filter the userData based on firstName and lastName.\r\n   * @param searchInput -> searchInput string\r\n   */\r\n  public getSearchInput(searchInput) {\r\n    const searchStr = searchInput.toLowerCase();\r\n    this.userData = _.filter(this.originalUsersArr, (val: any) => {\r\n      const str = (val.firstName + val.lastName).toLowerCase();\r\n      return str.indexOf(searchStr) >= 0;\r\n    });\r\n    this.usersLength = this.userData.length;\r\n  }\r\n\r\n  /**\r\n   * SortClick method will sort userData based on firstName.\r\n   */\r\n  sortClick() {\r\n    this.userData = _.sortBy(this.userData, ['firstName']);\r\n  }\r\n  /**\r\n   * addNewBtnClick method to route the user creation page\r\n   * And update sharedUserData\r\n   */\r\n  public addNewBtnClick() {\r\n    this.sharedUserDataService.changeData(null);\r\n    this.routingService.goToPage('user', 'create');\r\n  }\r\n  /**\r\n   * editBtnClick method to route the user update page\r\n   * And update sharedUserData\r\n   */\r\n  public editBtnClick(user) {\r\n    this.sharedUserDataService.changeData(user);\r\n    this.routingService.goToPage('user', 'update', user.userId);\r\n  }\r\n  /**\r\n   * removeBtnClick method to remove user\r\n   */\r\n  removeBtnClick(user) {\r\n    this.userMangementService.deleteUser(user.userId).subscribe(res => {\r\n      this.commonService.showSnackBar('Successfully deleted User!!', 'Deleted User');\r\n      this.init();\r\n    }, (err) => {\r\n      this.commonService.showSnackBar('Somethign wrong while deletion', 'Delete Failed');\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserComponent } from './user.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MaterialModule } from 'src/app/material.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { GravatarModule } from '@infinitycube/gravatar';\r\nimport { UserCreateComponent } from './user-create/user-create.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'list',\r\n    component: UserComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: UserCreateComponent\r\n  },\r\n  { path: 'update/:id', component: UserCreateComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: 'list',\r\n    pathMatch: 'full'\r\n  },\r\n  // { path: '**', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [UserComponent, UserCreateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    GravatarModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedUserDataService {\n  private userDataSource = new BehaviorSubject(false);\n  currentUser$ = this.userDataSource.asObservable();\n\n  constructor() { }\n\n  changeData(data: any) {\n    this.userDataSource.next(data);\n  }\n}\n"],"sourceRoot":""}