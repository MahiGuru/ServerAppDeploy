{"version":3,"sources":["webpack:///./src/app/features/schedule-delivery/schedule-delivery.component.html","webpack:///./src/app/features/schedule-delivery/schedule-delivery.component.scss","webpack:///./src/app/features/schedule-delivery/schedule-delivery.component.ts","webpack:///./src/app/features/schedule-delivery/schedule-delivery.module.ts"],"names":[],"mappings":"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","file":"features-schedule-delivery-schedule-delivery-module.js","sourcesContent":["module.exports = \"<haribol-page-heading [title]=\\\"'Schedule Delivery'\\\" [headIcon]=\\\"'fa-users'\\\" (searchVal)=\\\"getSearchInput($event)\\\"\\r\\n  [count]=\\\"customersLength\\\"></haribol-page-heading>\\r\\n<div class=\\\"tbl-content\\\">\\r\\n  <br />\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n    <mat-form-field>\\r\\n      <mat-select placeholder=\\\"User Roles\\\" [formControl]=\\\"roleId\\\">\\r\\n        <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.code\\\">\\r\\n          {{role.name}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <mat-tab-group animationDuration=\\\"100ms\\\" mat-align-tabs=\\\"center\\\">\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        <i class=\\\"fas fa-location-arrow mr-10 \\\"></i>\\r\\n        Assign Delivery\\r\\n      </ng-template>\\r\\n      <div class=\\\"customer-rep\\\" *ngIf=\\\"roleId.value == 'CUST_REP'\\\">\\r\\n        <div *ngFor=\\\"let customer of customerData\\\">\\r\\n          <div class=\\\"data-info ptb-10 mb-10\\\" fxLayout=\\\"row\\\" fxLayoutWrap fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <div fxFlex=\\\"150px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"20px\\\">\\r\\n              <img fxFlex=\\\"50px\\\" gravatar [email]=\\\"customer.email\\\" [size]=\\\"36\\\">\\r\\n              <p fxFlex fxFlexAlign=\\\"center\\\">{{customer.firstName}} {{customer.lastName}}</p>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\" class=\\\"wrap\\\">\\r\\n              <p>{{customer.email}}</p>\\r\\n              <p>{{customer.phone}}</p>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\"> {{customer.address1}}</div>\\r\\n            <div fxFlex=\\\"15\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Delivery Channels\\\" [formControl]=\\\"deliveryChannelId\\\">\\r\\n                  <mat-option *ngFor=\\\"let channel of deliveryChannels\\\" [value]=\\\"channel.channelId\\\">\\r\\n                    {{channel.name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100px\\\">\\r\\n              <button mat-button class=\\\"btn assign-btn\\\" (click)=\\\"assignChannelToCustomer(deliveryChannelId.value, customer.customerId)\\\">\\r\\n                <i class=\\\"fas fa-location-arrow\\\"></i> Assign\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"delivery-rep\\\" *ngIf=\\\"roleId.value == 'DELIVERY_REP'\\\">\\r\\n        <div *ngFor=\\\"let customer of customerData\\\">\\r\\n          <div class=\\\"data-info ptb-10 mb-10\\\" fxLayout=\\\"row\\\" fxLayoutWrap fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <div fxFlex=\\\"150px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"20px\\\">\\r\\n              <img fxFlex=\\\"50px\\\" gravatar [email]=\\\"customer.email\\\" [size]=\\\"36\\\">\\r\\n              <p fxFlex fxFlexAlign=\\\"center\\\">{{customer.firstName}} {{customer.lastName}}</p>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\" class=\\\"wrap\\\">\\r\\n              <p>{{customer.email}}</p>\\r\\n              <p>{{customer.phone}}</p>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\"> {{customer.address1}}</div>\\r\\n            <div fxFlex=\\\"15\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Delivery Channels\\\" [(ngModel)]=\\\"deliveryChannelId\\\">\\r\\n                  <mat-option *ngFor=\\\"let channel of deliveryChannels\\\" [value]=\\\"channel.channelId\\\">\\r\\n                    {{channel.name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"15\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Delivery Boys\\\" [formControl]=\\\"deliveryBoyId\\\">\\r\\n                  <mat-option *ngFor=\\\"let boy of deliveryBoys\\\" [value]=\\\"boy.userId\\\">\\r\\n                    {{boy.firstName }} {{boy.lastName }}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100px\\\">\\r\\n              <button mat-button class=\\\"btn assign-btn\\\" (click)=\\\"assignToDeliveryBoy(deliveryBoyId.value, customer.customerId)\\\">\\r\\n                <i class=\\\"fas fa-location-arrow\\\"></i> Assign\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        <i class=\\\"fas fa-map-marker-alt mr-10\\\"></i>\\r\\n        Assigned Deliverys\\r\\n      </ng-template>\\r\\n      <div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".assign-btn {\\n  background-color: #00adf1;\\n  color: #ffffff; }\\n  .assign-btn:hover {\\n    background-color: #005e94; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmVhdHVyZXMvc2NoZWR1bGUtZGVsaXZlcnkvRDpcXFdPUktcXE1FUlVEQU5cXGhhcmlib2xfYW5nL3NyY1xcYXBwXFxmZWF0dXJlc1xcc2NoZWR1bGUtZGVsaXZlcnlcXHNjaGVkdWxlLWRlbGl2ZXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMEJBQXlCO0VBQ3pCLGVBQWMsRUFLZjtFQVBEO0lBS0ksMEJBQWlDLEVBQ2xDIiwiZmlsZSI6InNyYy9hcHAvZmVhdHVyZXMvc2NoZWR1bGUtZGVsaXZlcnkvc2NoZWR1bGUtZGVsaXZlcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXNzaWduLWJ0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWRmMTtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgOTQsIDE0OCk7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerManagementService } from 'src/app/shared/services/customer-management.service';\r\nimport { RoutingService } from 'src/app/shared/services/routing.service';\r\nimport { SharedCustomerDataService } from 'src/app/shared/services/share-data/shared-customer-data.service';\r\nimport * as _ from 'lodash';\r\nimport { DeliveryChannelService } from 'src/app/shared/services/delivery-channel.service';\r\nimport { UserManagementService } from 'src/app/shared/services/user-management.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { CommonService } from 'src/app/shared/services/common-service.service';\r\n@Component({\r\n  selector: 'haribol-schedule-delivery',\r\n  templateUrl: './schedule-delivery.component.html',\r\n  styleUrls: ['./schedule-delivery.component.scss']\r\n})\r\nexport class ScheduleDeliveryComponent implements OnInit {\r\n  public customerData: Array<any>;\r\n  public originalCustomerArr: Array<any>;\r\n  public customersLength: number;\r\n  public deliveryChannels: any;\r\n  public roles: Array<any>;\r\n  public deliveryBoys: any;\r\n  public deliveryChannelId: FormControl;\r\n  public roleId: FormControl;\r\n  public deliveryBoyId: FormControl;\r\n  constructor(public customerManagementService: CustomerManagementService,\r\n    public routingService: RoutingService,\r\n    public sharedCustomerDataService: SharedCustomerDataService,\r\n    public deliveryChannelService: DeliveryChannelService,\r\n    public userService: UserManagementService,\r\n    public commonService: CommonService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.deliveryBoyId = new FormControl('');\r\n    this.roleId = new FormControl('');\r\n    this.deliveryChannelId = new FormControl('');\r\n    this.customerManagementService.getCustomers().subscribe((result: any) => {\r\n      this.customerData = result;\r\n      this.originalCustomerArr = result;\r\n      this.customersLength = this.customerData.length;\r\n    });\r\n    this.init();\r\n    this.deliveryBoyId.valueChanges.subscribe(boy => {\r\n    });\r\n    this.roleId.valueChanges.subscribe(role => {\r\n    });\r\n    this.deliveryChannelId.valueChanges.subscribe(channel => {\r\n    });\r\n  }\r\n  // load Delivery Channels\r\n  init() {\r\n    this.deliveryChannelService.getDeliveryChannels().subscribe(res => {\r\n      this.deliveryChannels = res;\r\n    });\r\n    this.userService.getRoles().subscribe(res => {\r\n      this.roles = res;\r\n      this.roleId.setValue('CUST_REP', { onlySelf: true });\r\n    });\r\n    this.userService.getUsers().subscribe((result: any) => {\r\n      this.deliveryBoys = result;\r\n    });\r\n  }\r\n  public getSearchInput(searchInput) {\r\n    const searchStr = searchInput.toLowerCase();\r\n    this.customerData = _.filter(this.originalCustomerArr, (val: any) => {\r\n      const str = (val.firstName + val.lastName).toLowerCase();\r\n      return str.indexOf(searchStr) >= 0;\r\n    });\r\n    console.log(this.customerData);\r\n    this.customersLength = this.customerData.length;\r\n  }\r\n  public addNewBtnClick() {\r\n    this.sharedCustomerDataService.changeData(null);\r\n    this.routingService.goToPage('customer', 'create');\r\n  }\r\n  public assignAreaClick(customerId: number) {\r\n    console.log(customerId);\r\n  }\r\n  public assignChannelToCustomer(chId, cId) {\r\n    if (cId && chId) {\r\n      this.deliveryChannelService.updateDeliveryCustomer({ channelId: chId, customerId: cId }).subscribe(res => {\r\n        this.commonService.showSnackBar('Successfully assigned to customer rep!!', 'Assigned to Customer');\r\n      }, err => {\r\n        this.commonService.showSnackBar('Something went wrong!!', 'Assigned Fail Customer');\r\n      });\r\n    }\r\n  }\r\n  public assignToDeliveryBoy(boyId, cId) {\r\n    if (cId && boyId) {\r\n      this.deliveryChannelService.updateDeliveryBoy({ delBoyId: boyId, customerId: cId }).subscribe(res => {\r\n        this.commonService.showSnackBar('Successfully assigned to Delivery boy!!', 'Assigned to DeliveryBoy');\r\n      }, err => {\r\n        this.commonService.showSnackBar('Something went wrong!!', 'Assigned Fail DeliveryBoy');\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScheduleDeliveryComponent } from './schedule-delivery.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatInputModule } from '@angular/material';\nimport { GravatarModule } from '@infinitycube/gravatar';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScheduleDeliveryComponent\n  },\n\n];\n\n@NgModule({\n  declarations: [\n    ScheduleDeliveryComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    MatInputModule,\n    GravatarModule,\n    SharedModule,\n    FlexLayoutModule,\n    FormsModule,\n    NgxDatatableModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ScheduleDeliveryModule { }\n"],"sourceRoot":""}